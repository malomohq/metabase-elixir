name: ci

on: push

permissions:
    contents: read

jobs:
    dialyzer:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: erlef/setup-beam@v1

              with:
                  elixir-version: ${{ matrix.elixir }}

                  otp-version: ${{ matrix.otp }}

            - name: Build cache key

              run: |
                  elixir=$(elixir -e "IO.puts(System.version())" | sed -e "s/\r//g")

                  erlang=$(erl -noshell -eval "{ok, Version} = file:read_file(filename:join([code:root_dir(), \"releases\", erlang:system_info(otp_release), \"OTP_VERSION\"])), io:fwrite(Version), halt().")

                  echo "$elixir+$erlang" > CACHEKEY

            - id: cache-key

              name: Compute cache key

              run: |
                  cacheKey=${{ hashFiles('mix.lock', 'CACHEKEY') }}

                  echo "::set-output name=cache-key::$cacheKey"

            - uses: actions/cache@v3

              with:
                  key: ${{ github.job }}-${{ steps.cache-key.outputs.cache-key }}

                  path: |
                      _build
                      deps

            - name: Download dependencies

              run: mix deps.get

            - name: Compile library

              run: mix compile --warnings-as-errors

            - name: Run dialyzer

              run: mix dialyzer

        strategy:
            matrix:
                elixir:
                    - 1.12.x
                    - 1.13.x
                    - 1.14.x

                exclude:
                    - elixir: 1.12.x

                      otp: 25.x

                    - elixir: 1.13.x

                      otp: 25.x

                otp:
                    - 24.x
                    - 25.x

    format:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: erlef/setup-beam@v1

              with:
                  elixir-version: ${{ matrix.elixir }}

                  otp-version: ${{ matrix.otp }}

            - name: Build cache key

              run: |
                  elixir=$(elixir -e "IO.puts(System.version())" | sed -e "s/\r//g")

                  erlang=$(erl -noshell -eval "{ok, Version} = file:read_file(filename:join([code:root_dir(), \"releases\", erlang:system_info(otp_release), \"OTP_VERSION\"])), io:fwrite(Version), halt().")

                  echo "$elixir+$erlang" > CACHEKEY

            - id: cache-key

              name: Compute cache key

              run: |
                  cacheKey=${{ hashFiles('mix.lock', 'CACHEKEY') }}

                  echo "::set-output name=cache-key::$cacheKey"

            - uses: actions/cache@v3

              with:
                  key: ${{ github.job }}-${{ steps.cache-key.outputs.cache-key }}

                  path: |
                      _build
                      deps

            - name: Download dependencies

              run: mix deps.get

            - name: Compile library

              run: mix compile --warnings-as-errors

            - name: Verify code format

              run: mix format --check-formatted

        strategy:
            matrix:
                elixir:
                    - 1.12.x
                    - 1.13.x
                    - 1.14.x

                exclude:
                    - elixir: 1.12.x

                      otp: 25.x

                    - elixir: 1.13.x

                      otp: 25.x

                otp:
                    - 24.x
                    - 25.x

    test:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - uses: erlef/setup-beam@v1

              with:
                  elixir-version: ${{ matrix.elixir }}

                  otp-version: ${{ matrix.otp }}

            - name: Build cache key

              run: |
                  elixir=$(elixir -e "IO.puts(System.version())" | sed -e "s/\r//g")

                  erlang=$(erl -noshell -eval "{ok, Version} = file:read_file(filename:join([code:root_dir(), \"releases\", erlang:system_info(otp_release), \"OTP_VERSION\"])), io:fwrite(Version), halt().")

                  echo "$elixir+$erlang" > CACHEKEY

            - id: cache-key

              name: Compute cache key

              run: |
                  cacheKey=${{ hashFiles('mix.lock', 'CACHEKEY') }}

                  echo "::set-output name=cache-key::$cacheKey"

            - uses: actions/cache@v3

              with:
                  key: ${{ github.job }}-${{ steps.cache-key.outputs.cache-key }}

                  path: |
                      _build
                      deps

            - name: Download dependencies

              run: mix deps.get

            - name: Compile library

              run: MIX_ENV=test mix compile --warnings-as-errors

            - name: Run tests

              run: mix test

        strategy:
            matrix:
                elixir:
                    - 1.12.x
                    - 1.13.x
                    - 1.14.x

                exclude:
                    - elixir: 1.12.x

                      otp: 25.x

                    - elixir: 1.13.x

                      otp: 25.x

                otp:
                    - 24.x
                    - 25.x
